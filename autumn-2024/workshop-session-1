======= install kafka =======

reference: https://kafka.apache.org/downloads

why?

difference between regular image or native image 

docker container time zone using env TZ or mount etc local time

difference betwrrn binary version - scala version 

release note

port listen, netstat, lsof port, protocol, listen, ip version --> lsof -i tcp -s tcp:listen -P -n


download gzip file 

Kafka with ZooKeeper

    # Start the ZooKeeper service
    $ bin/zookeeper-server-start.sh config/zookeeper.properties

    # Start the Kafka broker service
    $ bin/kafka-server-start.sh config/server.properties


    lsof -i tcp -s tcp:listen -n -P | grep java
    ps aux | grep java | tr -s ' ' | cut -d' ' -f1


Kafka with KRaft

    Generate a Cluster UUID
        $ bin/kafka-storage.sh random-uuid
        $ bin/kafka-storage.sh format --standalone -t *** -c config/kraft/reconfig-server.properties
        view meta.properties in tmp directory
        $ bin/kafka-server-start.sh config/kraft/reconfig-server.properties

    using docker
    
    $ docker pull apache/kafka:3.9.0
    $ docker run -p 9092:9092 apache/kafka:3.9.0


    using native image kafka
    $ docker pull apache/kafka-native:3.9.0
    $ docker run -p 9092:9092 apache/kafka-native:3.9.0


offset explorer

kafka ui
    docker run provectuslabs/kafka-ui:v0.7.2
    using netstat to check listen port
    expose ui port 8080
    configure kafka cluster using cluster name and bootstrap and jmx

redpanda console


test console producer, console consumer, show lag 

docker run --rm -it --name kafka apache/kafka:3.7.0

docker exec -it kafka bash

netstat -tupln 

docker run --rm -it --name kafka -p 9092:9092 apache/kafka:3.7.0

./kafka-console-producer.sh --bootstrap-server localhost:9092 --topic test

./kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test --from-beginning --group test

./kafka-consumer-groups.sh --bootstrap-server localhost:9092 --group test --describe


/opt/kafka/bin/kafka-consul-producer.sh --bootstrap-server localhost:9092 --topic test

over-consumption & under-consumption
    confluent-example:
    https://github.com/confluentinc/cp-demo

under-consumption
    https://www.youtube.com/watch?v=d0tZS5FxdM0

over-consumption
    https://www.youtube.com/watch?v=ZYnoG59xNCI


    






