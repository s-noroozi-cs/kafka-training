* kafka release note

    https://downloads.apache.org/kafka/3.9.0/RELEASE_NOTES.html

* conduktor console

* kraft meta data model
    event base
    hidden topic


/tmp/kraft-combined-logs/__cluster_metadata-0/


/opt/kafka/bin/kafka-metadata-quorum.sh --bootstrap-server  localhost:9092 describe --status


cluster brokers:

    1. creating an ID to identify the cluster
        
        CLUSTER_ID: '1L6w3nShT-ewCtK--z86sw'

    2. Setup the broker configuration

        * roles of the node in cluster, broker and controller

        KAFKA_PROCESS_ROLES: 'broker,controller'

        * A unique node.id is specified for each node in the cluster

        KAFKA_NODE_ID: 1
        KAFKA_NODE_ID: 2
        KAFKA_NODE_ID: 3

        * to specify a set of brokers that will participate in the quorum for electing the controller, using the format nodeId@host:port

        KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093'


leader and flower

    $ kafka-topics.sh --bootstrap-server kafka-1:9092 --topic test --describe

    LEADER SKEW

        auto.leader.rebalance.enable

        leader.imbalance.check.interval.seconds

    changes partitions
    $ kafka-topics.sh --bootstrap-server <broker:port> --topic <topic-name> --alter --partitions <number>


    verify partition reassignment
    $ ./kafka-topics.sh --bootstrap-server kafka-1:9092 --topic test --describe | grep Leader | awk '{print $5 $6'} | sort  | uniq -c

    Decreasing the Partition ?
        data ?
        Kafka Connect or MirrorMaker
        core guarantees of order, durability, and availability.

        Message Ordering:
            Kafka guarantees that messages within a partition are delivered in the order they were produced. Reducing partitions would require merging partitions, disrupting this order and violating the guarantee.
        
        Data Consistency:
            Partitions store offsets that uniquely identify messages. Reducing partitions would result in offset conflicts, leading to potential data loss or duplication.

        Consumer Group Functionality:
            Kafkaâ€™s consumer group model assigns partitions to consumers. Reducing partitions would disrupt partition assignments, breaking existing consumer workflows.

    add more broker

            distribute old topic between new broker(s)        
            
            create file with following content
            
                {"version": 1,"topics": [{ "topic": "test"}]}
            
            ./kafka-reassign-partitions.sh \
                --bootstrap-server kafka-1:9092 \
                --topics-to-move-json-file topics.json \
                --broker-list 1,2,3,4 \
                --generate

            You can copy this proposed partition reassignment and paste it in a local reassignment.json

            kafka-reassign-partitions.sh --bootstrap-server kafka-1:9092 --reassignment-json-file reassignment.json --execute

            kafka-reassign-partitions.sh --bootstrap-server kafka-1:9092 --reassignment-json-file reassignment.json --verify
